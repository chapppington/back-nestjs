generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(cuid())
  email String? @unique
  phone String? @unique

  name       String?
  password   String?
  avatarPath String? @map("avatar_path")

  telegramId String? @map("telegram_id")

  otpCode      String?   @map("otp_code")
  otpExpiresAt DateTime? @map("otp_expires_at")

  verificationToken String? @default(cuid()) @map("verification_token")

  rights Role[] @default([USER])

  @@map("users")
}

enum Role {
  USER
  PREMIUM
  MANAGER
  ADMIN
}

model News {
  id        String   @id @default(cuid())
  category  String
  title     String
  slug      String   @unique
  content   String
  shortContent String? @map("short_content")
  image     String?
  alt       String?  // Alt text for SEO
  readingTime Int    @default(0) @map("reading_time")
  date      DateTime? @map("date") // Custom display date for news
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("news")
}

model PortfolioItem {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  poster    String
  year      Int     // Making year optional initially
  description String // Optional description for the portfolio item

  taskTitle       String  @map("task_title")
  taskDescription String  @map("task_description")

  solutionTitle         String  @map("solution_title")
  solutionDescription   String  @map("solution_description")
  solutionSubtitle      String  @map("solution_subtitle")
  solutionSubdescription String @map("solution_subdescription")
  solutionImages        String[] @map("solution_images")
  previewVideoPath      String? @map("preview_video_path")
  fullVideoPath         String? @map("full_video_path")

  hasReview    Boolean @default(false) @map("has_review")
  reviewTitle  String? @map("review_title")
  reviewText   String? @map("review_text")
  reviewName   String? @map("review_name")
  reviewImage  String? @map("review_image")
  reviewRole   String? @map("review_role")

  // Связь с товарами
  products Product[] @relation("ProductPortfolioItems")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("portfolio_items")
}

model Vacancy {
  id          String   @id @default(cuid())
  title       String
  requirements String[]
  experience   String[]
  salary      Int
  category    String

  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("vacancies")
}

model SiteSeoSettings {
  id          String   @id @default(cuid())
  pagePath    String   @unique @map("page_path")
  pageName    String   @map("page_name")
  title       String
  description String
  keywords    String?
  ogTitle     String?  @map("og_title")
  ogDescription String? @map("og_description")
  ogImage     String?  @map("og_image")
  canonicalUrl String? @map("canonical_url")
  isActive    Boolean  @default(true) @map("is_active")
  
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("site_seo_settings")
}

model Product {
  id          String   @id @default(cuid())
  category    String
  name        String
  slug        String   @unique
  description String
  previewImage String?  @map("preview_image") // Опциональное поле для превью изображения
  previewImageAlt String? @map("preview_image_alt") // Alt описание для превью изображения
  importantCharacteristics Json @map("important_characteristics") // JSON массив с характеристиками
  advantages  Json // JSON массив с преимуществами (от 3 до 5)
  simpleDescription Json @map("simple_description") // JSON с простым описанием
  detailedDescription Json @map("detailed_description") // JSON с детальным описанием
  
  order Int @default(0) // Порядок отображения
  isShown Boolean @default(true) @map("is_shown") // Флаг отображения в каталоге
  // Поля для 3D модели
  model_3d_url    String?  @map("model_3d_url") // Путь к 3D модели
  
  // Связь с кейсами применения (PortfolioItem)
  portfolioItems PortfolioItem[] @relation("ProductPortfolioItems")
  
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("products")
}

model SiteConfig {
  id         String   @id @default(cuid())
  fontFamily String
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("site_config")
}

model NavbarConfig {
  id                    String   @id @default(cuid())
  desktopNavbarConfig   Json     @map("desktop_navbar_config") // { 'links_shown': [], 'links_in_hidden_menu': [] }
  navbarEmail           String?  @map("navbar_email")
  navbarPhone           String?  @map("navbar_phone")
  navbarCtaButtonText   String?  @map("navbar_cta_button_text")
  
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")

  @@map("navbar_config")
}

model FooterConfig {
  id                    String   @id @default(cuid())
  footerLinksConfig     Json     @map("footer_links_config") // { 'links_in_tablet_menu': [], 'all_links': [] }
  departmentItems       Json     @map("department_items") // Array of { name: string, phone: string, email: string }
  footerAddress         String   @map("footer_address")
  
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")

  @@map("footer_config")
}

model HomePageConfig {
  id                    String   @id @default(cuid())
  firstScreen           Json     @map("first_screen") // { title, subtitle, main_button_text, stats }
  rotatingText          String   @map("rotating_text")
  missionScreen         Json     @map("mission_screen") // { mission_title, mission_text }
  productsScreen        Json     @map("products_screen") // { button_text, products }
  reviewsScreen         Json     @map("reviews_screen") // { title, subtitle, reviews }
  
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")

  @@map("home_page_config")
}

model ProductionPageConfig {
  id                    String   @id @default(cuid())
  firstScreen           Json     @map("first_screen") // { bg_image, title, subtitle, button_text, button_href, stats }
  secondScreen          Json     @map("second_screen") // { title, subtitle, stages }
  thirdScreen           Json     @map("third_screen") // { title, subtitle, equipment }
  fourthScreen          Json     @map("fourth_screen") // { items }
  
  createdAt             DateTime @default(now()) @map("created_at")
  updatedAt             DateTime @updatedAt @map("updated_at")

  @@map("production_page_config")
}

model VacanciesPageConfig {
  id            String   @id @default(cuid())
  firstScreen   Json     @map("first_screen")   // { bg_image, title, subtitle, stats: [{ value, description, showOnMobile }] }
  secondScreen  Json     @map("second_screen")  // { title, subtitle }
  thirdScreen   Json     @map("third_screen")   // { title, subtitle, values: [{ title, subtitle, icon_path }] }
  fourthScreen  Json     @map("fourth_screen")  // { title, subtitle, subtitle_icon, advantages: [{ icon, text }] }
  fifthScreen   Json     @map("fifth_screen")   // { title, subtitle, reviews: [{ name, position, image, text, shortText }] }
  sixthScreen   Json     @map("sixth_screen")   // { title, subtitle, answers: [{ title, content, list? }] }

  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  @@map("vacancies_page_config")
}

model CertificatesPageConfig {
  id        String   @id @default(cuid())
  tabs      Json     @map("tabs") // [{ name, items: [{ id, title, content, order, documents: [{ title, link }] }] }]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("certificates_page_config")
}

model ContactsPageConfig {
  id          String   @id @default(cuid())
  departments Json     @map("departments") // Array of { name: string, phone: string, email: string }
  address     String   @map("address")

  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("contacts_page_config")
}

/// Тип формы, из которой пришла заявка
enum FormType {
  REQUEST        // Общая заявка с сайта (navbar popup и т.п.)
  VACANCY        // Форма вакансии
  QUESTIONNAIRE  // Анкета/опросник
  DEFAULT        // Прочие формы
}

/// Заявки/обращения с сайта
model FormSubmission {
  id        String   @id @default(cuid())

  formType  FormType @map("form_type")

  name      String
  email     String?
  phone     String?
  comments  String?

  // Пути к загруженным файлам (резюме и т. п.)
  files     String[] @default([]) @map("files")

  // Флаг согласия на обработку персональных данных
  consent   Boolean  @default(false)

  // Произвольные доп. данные из конкретной формы
  meta      Json?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("form_submissions")
}
